# functions is a group of statement that peform a specific task. it helps one to break program into smaller and modular chunks. it avoids repitation and makes code reusable 
# function syntax and example
def print_name(name):
    """this function prints name"""
    print("hello " +str(name))

print_name('anyrude')

# doc string function 
# the first string after function header is called as docstring and its short for documentation string.
print(print_name.__doc__)

# return statement
# return function is used to exit a function and go back to place from where it was called 
def get_sum(lst):
    """this function returns the sum of all elements in the list"""
    _sum = 0 
    for num in lst:
        _sum += num
    return _sum
s = get_sum([1, 2, 3, 4])
print(s)
print(get_sum.__doc__)

# scope and lifetime of variable 
"""scope of variable is the portion of program where the variable is recognized
variable defines inside the function is not visible from outside. hence. they have a local scope
lifetime of a varilable is the period throughout which the variable exits in a memory 
the lifetime of variable inside the function is as long as the function executes 
variable are destroyed once we return from the function
"""
global_var = "This is global variable"

def test_life_time():
    """this finction tests lifetime of a variable """
    local_var = "this is a local variable"
    print(local_var)
    print(global_var)

test_life_time()

print(global_var)

# print(local_var)

# python program to print highest common factor of two numbers 
def computerHFC(a, b):
    """computing HFC of two numbers"""
    smaller = b if a > b else a
    hfc = 1
    for i in range (1, smaller+1):
        if(a % i == 0) and (b % i == 0):
            hfc = i
        return hfc 

num1 = 98
num2 = 78
print("HFC of {0} and {1} is:{2}".format(num1, num2, computerHFC(num1, num2)))


a = 7
b = 6
def calculetegmean(a, b):
    mean = (a*b)/(a+b)
    print(mean)

def isgreater (a, b):
    if(a>b):
        print("First number is greater.")
    else:
        print("Second number is greater or equal.")

isgreater(a, b)
calculetegmean(a, b)

# Function arguments
# default arguments
def avrage(a=9, b=1):
    print("the avrage is: ",(a+b)/2)
avrage(4, 6)
avrage(5)
avrage(b = 9)

# keyword arguments
"""order of parameters does not matter"""
avrage(b= 9, a= 21)

# required arguments 
"""in case we dont pass the arguments with a key = value syntax then it is necessary to pass the arguments in the correct positional order and number of arguments passed should match with actual function defination."""
'''example = argument(a, b=1)
then we have to put the value for a like - argument(a=12)'''

# variable length argument 
"""In Python, Variable-Length Arguments (or varargs) are a way to pass a variable number of arguments to a function. This means that you can pass any number of arguments to a function, and the function will handle them all."""
def name(*name):
    print("Hello!", name[0], name[1], name[2])
name("neel", "nitin", "mukesh")
